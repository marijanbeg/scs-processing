import os
import time
import numpy as np
import subprocess as sp


def reduction_std(proposal, run, pattern, dirname=None,
                  frame_types=None, trains=None, njobs=40):
    script = ('import os, sys\n'
              'sys.path.append(os.path.dirname('
              'os.path.dirname(os.path.abspath(__file__))))\n'
              'import processing as pr\n'
              f'module = pr.Module(proposal={proposal}, run={run},'
              f' module=MODULE, pattern={pattern})\n'
              f'module.process_std(frame_types={frame_types}, trains={trains},'
              f' njobs={njobs}, dirname="../{dirname}")\n')
    _submit_jobs(script)


def reduction_norm(proposal, run, pattern, dark_run, dirname=None,
                   frames={'image': 'image',
                           'dark': 'dark'},
                   dark_run_frames={'image': 'image',
                                    'dark': 'dark'},
                   trains=None, xgm_threshold=(1e-5, np.inf), njobs=40):
    script = ('import os, sys\n'
              'import numpy as np\n'
              'sys.path.append(os.path.dirname('
              'os.path.dirname(os.path.abspath(__file__))))\n'
              'import processing as pr\n'
              f'module = pr.Module(proposal={proposal}, run={run},'
              f' module=MODULE, pattern={pattern})\n'
              f'module.process_norm(dark_run={dark_run}, '
              f'frames={frames}, dark_run_frames={dark_run_frames}, '
              f'trains={trains}, xgm_threshold={xgm_threshold}, '
              f'njobs={njobs}, dirname="../{dirname}")')
    _submit_jobs(script.replace('inf),', 'np.inf),'))


def _submit_jobs(py_script, slurm_dir='slurm_log', module_range=range(16)):
    script_dir = 'autogenerated_scripts'
    if not os.path.exists(script_dir):
        os.makedirs(script_dir)
    if not os.path.exists(slurm_dir):
        os.makedirs(slurm_dir)
    counter = 0
    for module in module_range:
        file_name = f'run_{time.time()}_module{module}'
        process_sh = ('#!/bin/bash\n'
                      'source /usr/share/Modules/init/bash\n'
                      'module load exfel\n'
                      'module load exfel_anaconda3/1.1\n'
                      f'python3 {file_name}.py')

        with open(f'{script_dir}/{file_name}.py', 'w') as f:
            f.write(py_script.replace('MODULE', str(module)))

        with open(f'{script_dir}/{file_name}.sh', 'w') as f:
            f.write(process_sh)
        command = ['sbatch', '-p', 'upex', '-t', '100',
                   '--chdir', f'{script_dir}',
                   '-o', f'../{slurm_dir}/slurm-%A.out', f'{file_name}.sh']
        res = sp.run(command, stdout=sp.PIPE)
        # print(res.stdout.decode('utf-8', 'replace'))
        counter += 1
    print(f'Submitted {counter} slurm jobs to the queue.')
